#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è funnel_data
"""

import sqlite3
import random
from datetime import datetime, timedelta

def create_test_funnel_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è funnel_data"""
    
    print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è funnel_data...")
    
    conn = sqlite3.connect('marketing_analytics.db')
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    conn.execute('''
        CREATE TABLE IF NOT EXISTS funnel_data (
            date TEXT,
            traffic_source TEXT,
            utm_campaign TEXT,
            utm_source TEXT,
            utm_medium TEXT,
            utm_content TEXT,
            utm_term TEXT,
            visit_id TEXT,
            submits REAL,
            res REAL,
            subs_all REAL,
            account_num INTEGER,
            created_flag INTEGER,
            call_answered_flag INTEGER,
            quality_flag INTEGER,
            quality INTEGER
        )
    ''')
    
    # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    conn.execute('DELETE FROM funnel_data')
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    utm_campaigns = ['rko_spring2024', '06133744', '111959248', '17262419', '22066899', '23226611']
    utm_sources = ['yandex', 'google', 'vsp', 'organic', 'direct']
    utm_mediums = ['cpc', 'cpm', 'organic', 'vsp', 'email']
    traffic_sources = ['Ad traffic', 'Organic traffic', 'Direct traffic', 'Referral traffic']
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    start_date = datetime.now() - timedelta(days=30)
    
    test_data = []
    visit_id_counter = 1
    
    for day in range(30):
        current_date = start_date + timedelta(days=day)
        date_str = current_date.strftime('%Y-%m-%d')
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 50-100 –∑–∞–ø–∏—Å–µ–π –≤ –¥–µ–Ω—å
        daily_records = random.randint(50, 100)
        
        for _ in range(daily_records):
            utm_campaign = random.choice(utm_campaigns)
            utm_source = random.choice(utm_sources)
            utm_medium = random.choice(utm_mediums)
            traffic_source = random.choice(traffic_sources)
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ—Ç—Ä–∏–∫–∏
            visits = random.randint(1, 5)
            submits = random.randint(0, visits)  # –ó–∞—è–≤–∫–∏ –Ω–µ –±–æ–ª—å—à–µ –≤–∏–∑–∏—Ç–æ–≤
            res = random.randint(0, submits)  # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –±–æ–ª—å—à–µ –∑–∞—è–≤–æ–∫
            subs_all = random.randint(0, submits)
            account_num = random.randint(0, res)
            created_flag = random.randint(0, account_num)
            call_answered_flag = random.randint(0, submits)
            quality_flag = random.randint(0, created_flag)
            quality = random.randint(0, quality_flag)
            
            # UTM –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Ç–µ—Ä–º–∏–Ω—ã
            utm_content = f"content_{random.randint(1000, 9999)}"
            utm_term = f"term_{random.randint(100, 999)}"
            
            test_data.append((
                date_str,
                traffic_source,
                utm_campaign,
                utm_source,
                utm_medium,
                utm_content,
                utm_term,
                str(visit_id_counter),
                float(submits),
                float(res),
                float(subs_all),
                account_num,
                created_flag,
                call_answered_flag,
                quality_flag,
                quality
            ))
            
            visit_id_counter += 1
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    conn.executemany('''
        INSERT INTO funnel_data 
        (date, traffic_source, utm_campaign, utm_source, utm_medium, utm_content, utm_term, 
         visit_id, submits, res, subs_all, account_num, created_flag, call_answered_flag, quality_flag, quality)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    ''', test_data)
    
    conn.commit()
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(test_data)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    sample = conn.execute('SELECT * FROM funnel_data LIMIT 3').fetchall()
    print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
    for row in sample:
        print(row)
    
    campaigns = conn.execute('SELECT DISTINCT utm_campaign FROM funnel_data LIMIT 10').fetchall()
    print(f"üéØ –ü—Ä–∏–º–µ—Ä—ã utm_campaign: {[c[0] for c in campaigns]}")
    
    sources = conn.execute('SELECT DISTINCT utm_source FROM funnel_data LIMIT 5').fetchall()
    print(f"üåê –ü—Ä–∏–º–µ—Ä—ã utm_source: {[s[0] for s in sources]}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_visits = conn.execute('SELECT COUNT(*) FROM funnel_data').fetchone()[0]
    total_submits = conn.execute('SELECT SUM(submits) FROM funnel_data').fetchone()[0]
    total_accounts = conn.execute('SELECT SUM(account_num) FROM funnel_data').fetchone()[0]
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_visits}")
    print(f"–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {total_submits}")
    print(f"–í—Å–µ–≥–æ —Å—á–µ—Ç–æ–≤: {total_accounts}")
    
    conn.close()

if __name__ == "__main__":
    create_test_funnel_data() 