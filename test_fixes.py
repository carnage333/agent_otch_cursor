#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

from ai_agent import MarketingAnalyticsAgent

def test_sql_display():
    """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è SQL –≤ –æ—Ç—á–µ—Ç–∞—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è SQL –≤ –æ—Ç—á–µ—Ç–∞—Ö...")
    
    agent = MarketingAnalyticsAgent()
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å –¥–∏–Ω–∞–º–∏–∫–∏ –ø–æ –¥–Ω—è–º
    question = "–ü–æ–∫–∞–∂–∏ –¥–∏–Ω–∞–º–∏–∫—É –ø–æ –¥–Ω—è–º –ø–æ rko_spring2024"
    print(f"\nüìù –ó–∞–ø—Ä–æ—Å: {question}")
    
    report = agent.process_question(question)
    print("\nüìä –û—Ç—á–µ—Ç:")
    print(report)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ SQL –≤ –æ—Ç—á–µ—Ç–µ
    if "üîç SQL –∑–∞–ø—Ä–æ—Å" in report:
        print("‚úÖ SQL –∑–∞–ø—Ä–æ—Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –æ—Ç—á–µ—Ç–µ")
    else:
        print("‚ùå SQL –∑–∞–ø—Ä–æ—Å –ù–ï –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –æ—Ç—á–µ—Ç–µ")
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –≤–æ—Ä–æ–Ω–∫–∏
    question2 = "–ü–æ–∫–∞–∂–∏ –≤–æ—Ä–æ–Ω–∫—É –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –¥–ª—è rko_spring2024"
    print(f"\nüìù –ó–∞–ø—Ä–æ—Å: {question2}")
    
    report2 = agent.process_question(question2)
    print("\nüìä –û—Ç—á–µ—Ç:")
    print(report2)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ SQL –≤ –æ—Ç—á–µ—Ç–µ
    if "üîç SQL –∑–∞–ø—Ä–æ—Å" in report2:
        print("‚úÖ SQL –∑–∞–ø—Ä–æ—Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –æ—Ç—á–µ—Ç–µ –≤–æ—Ä–æ–Ω–∫–∏")
    else:
        print("‚ùå SQL –∑–∞–ø—Ä–æ—Å –ù–ï –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –æ—Ç—á–µ—Ç–µ –≤–æ—Ä–æ–Ω–∫–∏")

def test_dynamic_query():
    """–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–∏–Ω–∞–º–∏–∫–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–∏–Ω–∞–º–∏–∫–∏...")
    
    agent = MarketingAnalyticsAgent()
    
    # –¢–µ—Å—Ç: –∑–∞–ø—Ä–æ—Å –¥–∏–Ω–∞–º–∏–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞–º–ø–∞–Ω–∏–∏
    question = "–ü–æ–∫–∞–∂–∏ –¥–∏–Ω–∞–º–∏–∫—É –ø–æ –¥–Ω—è–º –ø–æ rko_spring2024"
    print(f"\nüìù –ó–∞–ø—Ä–æ—Å: {question}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL
    sql_query = agent.generate_sql_query(question)
    print(f"\nüîç –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL:")
    print(sql_query)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ SQL —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞–º–ø–∞–Ω–∏–∏
    if "rko_spring2024" in sql_query:
        print("‚úÖ SQL —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞–º–ø–∞–Ω–∏–∏ rko_spring2024")
    else:
        print("‚ùå SQL –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞–º–ø–∞–Ω–∏–∏ rko_spring2024")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    df = agent.execute_query(sql_query)
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(df)}")
    if not df.empty:
        print(f"–ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
        print(f"–ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏:")
        print(df.head(3))

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    try:
        test_sql_display()
        test_dynamic_query()
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc() 