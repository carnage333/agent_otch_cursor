#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from ai_agent import MarketingAnalyticsAgent

def test_edge_cases():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫—Ä–∞–µ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤ –ø–æ–∏—Å–∫–∞"""
    agent = MarketingAnalyticsAgent()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        # –†–µ–≥–∏—Å—Ç—Ä –∏ –ø—Ä–æ–±–µ–ª—ã
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ —Ñ—Ä–∫4",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –§–†–ö-4", 
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ —Ñ—Ä–∫ 4",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –ì–æ–¥–æ–≤–æ–π performance",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –ì–û–î–û–í–û–ô PERFORMANCE",
        
        # –û–ø–µ—á–∞—Ç–∫–∏
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –≥–æ–¥–æ–≤–π performance",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –≥–æ–¥–æ–≤–æ performance",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –ø–µ—Ä—Ñ–æ–º–∞–Ω—Å",
        
        # –°–æ–∫—Ä–∞—â–µ–Ω–∏—è
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ —Ä–∫–æ",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ —Ä–±–∏–¥–æ—Å",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ —Ñ—Ä–∫",
        
        # –ß–∞—Å—Ç–∏—á–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –≥–æ–¥–æ–≤–æ–π",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ performance",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –±–∏–∑–Ω–µ—Å",
        
        # –†–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –±–∏–∑–Ω–µ—Å-–∫–∞—Ä—Ç—ã",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ –±–∏–∑–Ω–µ—Å –∫–∞—Ä—Ç—ã",
        "—Å–¥–µ–ª–∞–π –æ—Ç—á–µ—Ç –ø–æ —Å–±–µ—Ä–±–∏–∑–Ω–µ—Å",
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞–µ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤ –ø–æ–∏—Å–∫–∞\n")
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"–¢–µ—Å—Ç {i}: '{test_case}'")
        print("-" * 50)
        
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL
            sql = agent.generate_sql_query(test_case)
            print(f"SQL: {sql}")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
            df = agent.execute_query(sql)
            print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(df)}")
            
            if not df.empty:
                print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏:")
                for _, row in df.head(3).iterrows():
                    print(f"  - {row.get('campaign_name', 'N/A')}")
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
        
        print("\n" + "="*80 + "\n")

if __name__ == "__main__":
    test_edge_cases() 