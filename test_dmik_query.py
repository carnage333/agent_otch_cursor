#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from ai_agent import MarketingAnalyticsAgent

def test_dmik_query():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å '–ß—Ç–æ —Ç–∞–∫–æ–µ –î–ú–ò–ö?'"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ '–ß—Ç–æ —Ç–∞–∫–æ–µ –î–ú–ò–ö?'")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = MarketingAnalyticsAgent()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    question = "–ß—Ç–æ —Ç–∞–∫–æ–µ –î–ú–ò–ö?"
    
    print(f"üìù –ó–∞–ø—Ä–æ—Å: {question}")
    print("-" * 40)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
    response = agent.process_question(question)
    
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("=" * 60)
    print(response)
    print("=" * 60)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É
    print("\nüîç –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–∏–∫–∏:")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é —Ç–µ—Ä–º–∏–Ω–æ–≤
    question_lower = question.lower()
    is_asking_about_terms = any(word in question_lower for word in [
        "—á—Ç–æ —Ç–∞–∫–æ–µ", "–∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è", "—Ñ–æ—Ä–º—É–ª–∞", "–º–µ—Ç—Ä–∏–∫–∞", "–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ",
        "—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞", "–æ–∑–Ω–∞—á–∞–µ—Ç", "–æ–∑–Ω–∞—á–∞–µ—Ç –ª–∏", "—á—Ç–æ –∑–Ω–∞—á–∏—Ç"
    ])
    
    print(f"‚úÖ –î–µ—Ç–µ–∫—Ü–∏—è —Ç–µ—Ä–º–∏–Ω–æ–≤: {is_asking_about_terms}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    sql_query = agent.generate_sql_query(question)
    print(f"üîç SQL –∑–∞–ø—Ä–æ—Å: {sql_query}")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    df = agent.execute_query(sql_query)
    has_data = len(df) > 0
    print(f"üìä –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ: {has_data} (—Å—Ç—Ä–æ–∫: {len(df)})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É RAG
    should_use_rag = not has_data or is_asking_about_terms
    print(f"ü§ñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RAG: {should_use_rag}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_dmik_query() 