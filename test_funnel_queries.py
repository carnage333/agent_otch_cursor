#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –≤–æ—Ä–æ–Ω–∫–µ –∏ UTM-–º–µ—Ç–∫–∞–º
"""

import sqlite3
import pandas as pd
from ai_agent import MarketingAnalyticsAgent

def test_funnel_queries():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –≤–æ—Ä–æ–Ω–∫–µ –∏ UTM"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –≤–æ—Ä–æ–Ω–∫–µ –∏ UTM-–º–µ—Ç–∫–∞–º\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = MarketingAnalyticsAgent()
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    test_queries = [
        "–ü–æ–∫–∞–∂–∏ –≤–æ—Ä–æ–Ω–∫—É –ø–æ utm_campaign = 'rko_spring2024'",
        "–°–∫–æ–ª—å–∫–æ –±—ã–ª–æ –∑–∞—è–≤–æ–∫ –∏ —Å–∫–æ–ª—å–∫–æ –∏–∑ –Ω–∏—Ö –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ utm_source = 'yandex'",
        "–°—Ä–∞–≤–Ω–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—é –≤ –∑–∞—è–≤–∫–∏ –ø–æ utm_medium = 'cpc' –∏ utm_medium = 'organic'",
        "–ü–æ–∫–∞–∂–∏ —Ç–æ–ø-5 utm_campaign –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å—á–µ—Ç–æ–≤",
        "–ü–æ–∫–∞–∂–∏ –¥–∏–Ω–∞–º–∏–∫—É –ø–æ –¥–Ω—è–º –ø–æ utm_campaign = 'rko_spring2024'",
        "–°–∫–æ–ª—å–∫–æ –∑–∞—è–≤–æ–∫ –ø—Ä–∏—à–ª–æ —Å utm_source = 'yandex'?",
        "–ö–∞–∫–æ–π —Ç—Ä–∞—Ñ–∏–∫ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏—è –ø–æ —Ä–∞–∑–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º?",
        "–°–∫–æ–ª—å–∫–æ –≤–∏–∑–∏—Ç–æ–≤, –∑–∞—è–≤–æ–∫, —É—Å–ø–µ—à–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –ø–æ –∫–∞–º–ø–∞–Ω–∏–∏ '06133744'?",
        "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ª–∏–¥–æ–≤ –ø–æ —Ä–∞–∑–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º?",
        "–°–∫–æ–ª—å–∫–æ –±—ã–ª–æ –∑–≤–æ–Ω–∫–æ–≤/–æ—Ç–≤–µ—Ç–æ–≤/–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ UTM-–º–µ—Ç–∫–∞–º?",
        "–°—Ä–∞–≤–Ω–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–∑–Ω—ã—Ö UTM-–∫–∞–º–ø–∞–Ω–∏–π",
        "–ü–æ—Å—Ç—Ä–æ–π –≤–æ—Ä–æ–Ω–∫—É: –≤–∏–∑–∏—Ç—ã ‚Üí –∑–∞—è–≤–∫–∏ ‚Üí —Å—á–µ—Ç–∞ ‚Üí —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î:")
    conn = sqlite3.connect('marketing_analytics.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    cursor.execute('SELECT COUNT(*) FROM funnel_data')
    total_rows = cursor.fetchone()[0]
    print(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ funnel_data: {total_rows}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('SELECT * FROM funnel_data LIMIT 3')
    sample_data = cursor.fetchall()
    print("–ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
    for i, row in enumerate(sample_data, 1):
        print(f"  {i}. {row}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è UTM
    cursor.execute('SELECT DISTINCT utm_campaign FROM funnel_data WHERE utm_campaign IS NOT NULL LIMIT 5')
    campaigns = cursor.fetchall()
    print(f"–ü—Ä–∏–º–µ—Ä—ã utm_campaign: {[c[0] for c in campaigns]}")
    
    cursor.execute('SELECT DISTINCT utm_source FROM funnel_data WHERE utm_source IS NOT NULL LIMIT 5')
    sources = cursor.fetchall()
    print(f"–ü—Ä–∏–º–µ—Ä—ã utm_source: {[s[0] for s in sources]}")
    
    cursor.execute('SELECT DISTINCT utm_medium FROM funnel_data WHERE utm_medium IS NOT NULL LIMIT 5')
    mediums = cursor.fetchall()
    print(f"–ü—Ä–∏–º–µ—Ä—ã utm_medium: {[m[0] for m in mediums]}")
    
    conn.close()
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã
    for i, query in enumerate(test_queries, 1):
        print(f"üîç –¢–µ—Å—Ç {i}: {query}")
        try:
            response = agent.process_question(query)
            print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω (–¥–ª–∏–Ω–∞: {len(response)} —Å–∏–º–≤–æ–ª–æ–≤)")
            print(f"üìù –ù–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞: {response[:200]}...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("-" * 80)
        print()

if __name__ == "__main__":
    test_funnel_queries() 