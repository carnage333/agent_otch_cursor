import pandas as pd
import sqlite3
import os
from datetime import datetime

def load_real_data_to_db():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV —Ñ–∞–π–ª–æ–≤ –≤ SQLite –±–∞–∑—É"""
    
    print("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('marketing_analytics.db')
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–π
    if os.path.exists('rko_econometric_sample.csv'):
        print("üìä –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–π...")
        df_campaigns = pd.read_csv('rko_econometric_sample.csv')
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        df_campaigns = df_campaigns.rename(columns={
            '–î–∞—Ç–∞': 'date',
            '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏': 'campaign_name',
            '–ü–ª–æ—â–∞–¥–∫–∞': 'platform',
            '–ü–æ–∫–∞–∑—ã': 'impressions',
            '–ö–ª–∏–∫–∏': 'clicks',
            '–†–∞—Å—Ö–æ–¥ –¥–æ –ù–î–°': 'cost_before_vat',
            '–í–∏–∑–∏—Ç—ã': 'visits'
        })
        
        # –û—á–∏—â–∞–µ–º –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        df_campaigns = df_campaigns.dropna(subset=['campaign_name'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        df_campaigns['conversions'] = 0  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        df_campaigns['revenue'] = 0.0    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        df_campaigns.to_sql('campaign_metrics', conn, if_exists='replace', index=False)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df_campaigns)} –∑–∞–ø–∏—Å–µ–π –∫–∞–º–ø–∞–Ω–∏–π")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
        unique_campaigns = df_campaigns['campaign_name'].unique()
        print(f"üìã –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏: {len(unique_campaigns)}")
        for i, campaign in enumerate(unique_campaigns[:5]):
            print(f"  {i+1}. {campaign}")
        if len(unique_campaigns) > 5:
            print(f"  ... –∏ –µ—â–µ {len(unique_campaigns) - 5} –∫–∞–º–ø–∞–Ω–∏–π")
            
    else:
        print("‚ùå –§–∞–π–ª rko_econometric_sample.csv –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Ç–∞–±–ª–∏—Ü—É –≤–æ—Ä–æ–Ω–∫–∏ (—Ç–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª –ø—Ä–æ–±–ª–µ–º–Ω—ã–π)
    print("üîÑ –°–æ–∑–¥–∞—é –ø—É—Å—Ç—É—é —Ç–∞–±–ª–∏—Ü—É –≤–æ—Ä–æ–Ω–∫–∏...")
    empty_funnel = pd.DataFrame(columns=[
        'utm_source', 'utm_medium', 'utm_campaign', 'utm_content', 'utm_term',
        'step_name', 'step_order', 'visitors', 'conversions', 'conversion_rate', 'date'
    ])
    empty_funnel.to_sql('funnel_data', conn, if_exists='replace', index=False)
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø—É—Å—Ç–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤–æ—Ä–æ–Ω–∫–∏")
    
    conn.commit()
    conn.close()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    file_size = os.path.getsize('marketing_analytics.db') / (1024 * 1024)
    print(f"üìÅ –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {file_size:.2f} –ú–ë")
    
    if file_size > 50:
        print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å—à–µ 50 –ú–ë. –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –≤ GitHub.")
    else:
        print("‚úÖ –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è GitHub")

if __name__ == "__main__":
    load_real_data_to_db() 